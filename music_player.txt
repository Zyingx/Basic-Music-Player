# Modules Import
import tkinter as tki
import tkinter.font as tkFont
import tkinter.messagebox
import tkinter.filedialog
import time
import os
import pygame
import threading
from PIL import ImageTk , Image
from mutagen.mp3 import MP3


# Windows
root = tki.Tk()

# Window Formats
root.title("PiPlayer")
root.iconbitmap("Logo & Stuff\\PiPlayer.ico")
root.geometry("500x400")
root.resizable(width=False, height=False)

# Menu Bar
MENUBAR = tki.Menu(root)
root.config(menu=MENUBAR)
SUBMENU = tki.Menu(MENUBAR, tearoff=0)

playlist = []

def browse_file():
    global filename_path
    filename_path = tkinter.filedialog.askopenfilename(filetypes = (("MP3 Files", "*.mp3"),("OGG Files","*.ogg"),("WAV Files","*.wav"),("WMA Files","*.wma"),("M4A Files","*.m4a"),("All Files","*")))
    Song_Playlist(filename_path)

def Song_Playlist(filename):
    global firstvar
    filename = os.path.basename(filename)
    firstvar,lastvar = filename.split(".")
    index = 0
    Playbox.insert(index,firstvar)
    playlist.insert(index,filename_path)
    Playbox.pack()
    index = index + 1

def Remove():
    selected_song = Playbox.curselection()
    selected_song = int(selected_song[0])
    Playbox.delete(selected_song)
    playlist.pop(selected_song)

MENUBAR.add_cascade(label="File",menu=SUBMENU)
SUBMENU.add_command(label="Open",command=browse_file)
SUBMENU.add_command(label="Exit",command=root.destroy)

def About():
    tkinter.messagebox.showinfo("About","This GUI is created in 2020.")

SUBMENU = tki.Menu(MENUBAR, tearoff=0)
MENUBAR.add_cascade(label="Help",menu=SUBMENU)
SUBMENU.add_command(label="Guide to Use")
SUBMENU.add_command(label="About", command=About)

# Playlists

leftframe = tki.Frame(root)
leftframe.pack(side="right", padx=30, pady=30)

Playbox = tki.Listbox(leftframe)
Playbox.pack(fill="both", expand=True)

BUTTONREMOVE = tki.Button(leftframe, text="Remove", command=Remove)
BUTTONREMOVE.pack(side="right")

BUTTONADD = tki.Button(leftframe, text="Add", command=browse_file)
BUTTONADD.pack(side="left")

rightframe = tkinter.Frame(root)
rightframe.pack(pady=30)

topframe = tkinter.Frame(rightframe)
topframe.pack()

VAR = tki.StringVar()
SONGTITLE = tki.Label(topframe, textvariable=VAR)
SONGTITLE.pack()

lengthlabel = tki.Label(topframe, text='Total Length : --:--')
lengthlabel.pack(pady=5)

currenttimelabel = tki.Label(topframe, text='Current Time : --:--')
currenttimelabel.pack()

def show_details(play_song):
    file_data = os.path.splitext(play_song)

    if file_data[1] == '.mp3':
        audio = MP3(play_song)
        total_length = audio.info.length
    else:
        a = pygame.mixer.Sound(play_song)
        total_length = a.get_length()

    mins, secs = divmod(total_length, 60)
    mins = round(mins)
    secs = round(secs)
    timeformat = '{:02d}:{:02d}'.format(mins, secs)
    lengthlabel['text'] = "Total Length" + ' : ' + timeformat

    t1 = threading.Thread(target=start_count, args=(total_length,))
    t1.start()


def start_count(t):
    global paused
    current_time = 0
    while current_time <= t and pygame.mixer.music.get_busy():
        if paused:
            continue
        else:
            mins, secs = divmod(current_time, 60)
            mins = round(mins)
            secs = round(secs)
            timeformat = '{:02d}:{:02d}'.format(mins, secs)
            currenttimelabel['text'] = "Current Time" + ' : ' + timeformat
            time.sleep(1)
            current_time += 1


# Init Functions
pygame.init()
pygame.mixer.init()

# Events
paused = None

def play_player():
    """"Play the Audio File"""
    global paused

    if (paused==True):
        pygame.mixer.music.unpause()
        paused = False
        
    
    else:
        try:
            extension = Playbox.curselection()
            extensions = int(extension[0])
            play = playlist[extensions]
            pygame.mixer.music.load(play)
            VAR.set("Now Playing: " + firstvar)
            pygame.mixer.music.play()
            show_details(play)

        except:
            tkinter.messagebox.showerror("File Error","The file is not an Audio File.")

def stop_player():
    """Stop the Audio File from Playing"""
    pygame.mixer.music.stop()

def pause_player():
    """Pause the Audio while Playing"""
    global paused
    paused = True
    pygame.mixer.music.pause()

def loop_player():
    """Repeat the current Audio"""
    pygame.mixer.music.play(loops=-1)

def volume(val):
    volume = int(val)/100
    pygame.mixer.music.set_volume(volume)

muted = False

def mute_music():
    global muted
    if muted:
        pygame.mixer.music.set_volume(0.25)
        volumeBtn.configure(image=volumePhoto)
        VOLUMELEVEL.set(25)
        muted = False
    else: 
        pygame.mixer.music.set_volume(0)
        volumeBtn.configure(image=mutePhoto)
        VOLUMELEVEL.set(0)
        muted = True


# Player Buttons
middleframe = tki.Frame(rightframe)
middleframe.pack(pady=30, padx=30)

PLAY_LOGO = tki.PhotoImage(file="Logo & Stuff\\Play-Logo.png")
PLAYY_LOGO = PLAY_LOGO.subsample(5, 5)

BUTTON1 = tki.Button(middleframe, image=PLAYY_LOGO, command=play_player)
BUTTON1.grid(row=0, column=0, padx=5)

STOP_LOGO = tki.PhotoImage(file="Logo & Stuff\\Stop-Logo.png")
STOPP_LOGO = STOP_LOGO.subsample(5, 5)

BUTTON2 = tki.Button(middleframe, image=STOPP_LOGO, command=stop_player)
BUTTON2.grid(row=0, column=1, padx=5)

PAUSE_LOGO = tki.PhotoImage(file="Logo & Stuff\\Pause-Logo.png")
PAUSEE_LOGO = PAUSE_LOGO.subsample(5, 5)

BUTTON3= tki.Button(middleframe, image=PAUSEE_LOGO, command=pause_player)
BUTTON3.grid(row=0, column=2, padx=5)

LOOP_LOGO = tki.PhotoImage(file="Logo & Stuff\\Loop-Current.png")
LOOPP_LOGO = LOOP_LOGO.subsample(5, 5)

BUTTON4 = tki.Button(middleframe, image=LOOPP_LOGO, command=loop_player)
BUTTON4.grid(row=0, column=3, padx=5)

# Volume
bottomframe = tki.Frame(rightframe)
bottomframe.pack()

mutePhoto = tki.PhotoImage(file="Logo & Stuff\\Mute.png")
mutePhoto = mutePhoto.subsample(35, 35)

volumePhoto = tki.PhotoImage(file="Logo & Stuff\\Unmute.png")
volumePhoto = volumePhoto.subsample(35, 35)

volumeBtn = tki.Button(bottomframe, image=volumePhoto, command=mute_music)
volumeBtn.grid(row=0, column=1)

VOLUMELEVEL = tki.Scale(bottomframe, from_=0, to_=100,
                        orient=tki.HORIZONTAL, command=volume)
Volume = VOLUMELEVEL.set(25)
VOLUMELEVEL.grid(row=0, column=2, pady=15, padx=30)

# Activate the Audio File
root.mainloop()
